/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

Screen2ViewBase::Screen2ViewBase() :
    interaction1EndedCallback(this, &Screen2ViewBase::interaction1EndedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BackGround.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    BackGround.setPosition(0, 0, 480, 272);
    BackGround.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(BackGround);

    eStarLogo.setBitmap(touchgfx::Bitmap(BITMAP_ESTAR_TECH_LOGO_ID));
    eStarLogo.setPosition(0, 0, 480, 272);
    eStarLogo.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(eStarLogo);
}

Screen2ViewBase::~Screen2ViewBase()
{

}

void Screen2ViewBase::setupScreen()
{
    transitionBegins();
}

void Screen2ViewBase::transitionBegins()
{
    //Interaction1
    //When screen transition begins move eStarLogo
    //Move eStarLogo to x:480, y:0 with LinearIn easing in 500 ms (30 Ticks)
    eStarLogo.clearMoveAnimationEndedAction();
    eStarLogo.setMoveAnimationDelay(180);
    eStarLogo.startMoveAnimation(480, 0, 30, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
    eStarLogo.setMoveAnimationEndedAction(interaction1EndedCallback);
}

void Screen2ViewBase::interaction1EndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::ScalableImage>& comp)
{
    //Interaction2
    //When Interaction1 completed change screen to Screen1
    //Go to Screen1 with no screen transition
    application().gotoScreen1ScreenNoTransition();

}
